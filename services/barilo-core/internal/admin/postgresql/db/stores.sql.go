// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: stores.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const InsertStore = `-- name: InsertStore :one
INSERT INTO stores (
  name,
  address,
  phone
)
VALUES (
  $1,
  $2,
  $3
)
RETURNING id
`

type InsertStoreParams struct {
	Name    string
	Address string
	Phone   pgtype.Text
}

func (q *Queries) InsertStore(ctx context.Context, arg InsertStoreParams) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, InsertStore, arg.Name, arg.Address, arg.Phone)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}

const SelectStore = `-- name: SelectStore :one
SELECT
  id,
  name,
  address,
  phone
FROM
  stores
WHERE
  id = $1 
  OR
  ( 
    name = $2 
    AND
    address = $3 
  )
LIMIT 1
`

type SelectStoreParams struct {
	ID      uuid.UUID
	Name    string
	Address string
}

func (q *Queries) SelectStore(ctx context.Context, arg SelectStoreParams) (Stores, error) {
	row := q.db.QueryRow(ctx, SelectStore, arg.ID, arg.Name, arg.Address)
	var i Stores
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Address,
		&i.Phone,
	)
	return i, err
}
