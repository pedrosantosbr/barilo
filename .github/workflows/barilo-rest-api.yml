name: barilo-rest-api

on: push

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: barilo
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: barilo
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: barilo
          RABBITMQ_DEFAULT_PASS: barilo
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5672:5672

    defaults:
      run:
        working-directory: services/barilo-rest-api

    steps:
      - uses: actions/checkout@v4

      - run: pip install poetry

      - uses: actions/setup-python@v5
        with:
          python-version-file: services/barilo-rest-api/pyproject.toml
          cache: poetry

      - run: poetry install

      - run: poetry run ruff check .

      - run: poetry run ruff format --check .

      - run: poetry run python manage.py migrate
        env:
          SQL_ENGINE: django.db.backends.postgresql
          SQL_DATABASE: barilo
          SQL_USER: postgres
          SQL_PASSWORD: barilo
          SQL_HOST: localhost
          SQL_PORT: 5432

          RABBITMQ_HOST: localhost
          RABBITMQ_PORT: 5672
          RABBITMQ_USER: barilo
          RABBITMQ_PASSWORD: barilo

      - run: poetry run python manage.py test
        env:
          DJANGO_ALLOWED_HOSTS: localhost, 127.0.0.1

          SQL_ENGINE: django.db.backends.postgresql
          SQL_HOST: localhost
          SQL_DATABASE: barilo
          SQL_USER: postgres
          SQL_PASSWORD: barilo

          RABBITMQ_HOST: localhost
          RABBITMQ_PORT: 5672
          RABBITMQ_USER: barilo
          RABBITMQ_PASSWORD: barilo

      
